<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.mywebsitebackend.Data.Mapper.CommentMapper">

  <resultMap id="BaseResultMap" type="com.zzy.mywebsitebackend.Data.Entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="id" />
    <result column="comment_content" jdbcType="VARCHAR" property="content" />
    <result column="comment_parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="time" />
    <result column="comment_blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="comment_user_id" jdbcType="VARCHAR" property="userId" />
    <result column="comment_deleted" jdbcType="BIT" property="deleted" />
    <association property="user" javaType="com.zzy.mywebsitebackend.Data.Entity.User"
                 resultMap="com.zzy.mywebsitebackend.Data.Mapper.UserMapper.BaseResultMap"/>
  </resultMap>

  <sql id="Base_Column_List">
    comment.id as comment_id, comment.content as comment_content, comment.parent_id as comment_parent_id, 
    comment.time as comment_time, comment.blog_id as comment_blog_id, comment.user_id as comment_user_id, 
    comment.deleted as comment_deleted
    ,<include refid="com.zzy.mywebsitebackend.Data.Mapper.UserMapper.Base_Column_List" />
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment comment
    left join user on user.id=comment.user_id
    left join img on user.avatar_img_id=img.id
    where comment.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment comment
    left join user on user.id=comment.user_id
    left join img on user.avatar_img_id=img.id
  </select>

  <select id="selectByBlogIDWithRootNode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    left join user on user.id=comment.user_id
    left join img on user.avatar_img_id=img.id
    where
    comment.blog_id = #{blogID,jdbcType=INTEGER}
    and
    comment.parent_id = -1
    order by #{sort,jdbcType=VARCHAR} ${order},comment.id ${order} limit #{offset,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>

  <select id="selectByParentIDs" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment comment
    left join user on user.id=comment.user_id
    left join img on user.avatar_img_id=img.id
    where
    comment.parent_id in
    <foreach collection="list" item="id" separator="," open="(" close=")">
      #{id,jdbcType=INTEGER}
    </foreach>
  </select>

  <select id="selectByBlogIDRootCount" resultType="java.lang.Integer">
    select count(*)
    from comment
    where
    comment.blog_id = #{blogID,jdbcType=INTEGER}
    and
    comment.parent_id = -1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zzy.mywebsitebackend.Data.Entity.Comment" useGeneratedKeys="true">
    insert into comment (content, parent_id, time, 
      blog_id, user_id, deleted
      )
    values (#{content,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{blogId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <!--<insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zzy.mywebsitebackend.Data.Entity.Comment" useGeneratedKeys="true">-->
    <!--insert into comment-->
    <!--<trim prefix="(" suffix=")" suffixOverrides=",">-->
      <!--<if test="content != null">-->
        <!--content,-->
      <!--</if>-->
      <!--<if test="parentId != null">-->
        <!--parent_id,-->
      <!--</if>-->
      <!--<if test="time != null">-->
        <!--time,-->
      <!--</if>-->
      <!--<if test="blogId != null">-->
        <!--blog_id,-->
      <!--</if>-->
      <!--<if test="userId != null">-->
        <!--user_id,-->
      <!--</if>-->
      <!--<if test="deleted != null">-->
        <!--deleted,-->
      <!--</if>-->
    <!--</trim>-->
    <!--<trim prefix="values (" suffix=")" suffixOverrides=",">-->
      <!--<if test="content != null">-->
        <!--#{content,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="parentId != null">-->
        <!--#{parentId,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="time != null">-->
        <!--#{time,jdbcType=TIMESTAMP},-->
      <!--</if>-->
      <!--<if test="blogId != null">-->
        <!--#{blogId,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="userId != null">-->
        <!--#{userId,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="deleted != null">-->
        <!--#{deleted,jdbcType=BIT},-->
      <!--</if>-->
    <!--</trim>-->
  <!--</insert>-->
  <update id="updateByPrimaryKeySelective" parameterType="com.zzy.mywebsitebackend.Data.Entity.Comment">
    update comment
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--<update id="updateByPrimaryKey" parameterType="com.zzy.mywebsitebackend.Data.Entity.Comment">-->
    <!--update comment-->
    <!--set content = #{content,jdbcType=VARCHAR},-->
      <!--parent_id = #{parentId,jdbcType=INTEGER},-->
      <!--time = #{time,jdbcType=TIMESTAMP},-->
      <!--blog_id = #{blogId,jdbcType=INTEGER},-->
      <!--user_id = #{userId,jdbcType=VARCHAR},-->
      <!--deleted = #{deleted,jdbcType=BIT}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->
</mapper>